// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package middleware

import (
	"sync"
)

// Ensure, that GatewayMiddlewareConfMock does implement GatewayMiddlewareConf.
// If this is not the case, regenerate this file with moq.
var _ GatewayMiddlewareConf = &GatewayMiddlewareConfMock{}

// GatewayMiddlewareConfMock is a mock implementation of GatewayMiddlewareConf.
//
//	func TestSomethingThatUsesGatewayMiddlewareConf(t *testing.T) {
//
//		// make and configure a mocked GatewayMiddlewareConf
//		mockedGatewayMiddlewareConf := &GatewayMiddlewareConfMock{
//			NameFunc: func() string {
//				panic("mock out the Name method")
//			},
//			ValidateFunc: func() error {
//				panic("mock out the Validate method")
//			},
//		}
//
//		// use mockedGatewayMiddlewareConf in code that requires GatewayMiddlewareConf
//		// and then make assertions.
//
//	}
type GatewayMiddlewareConfMock struct {
	// NameFunc mocks the Name method.
	NameFunc func() string

	// ValidateFunc mocks the Validate method.
	ValidateFunc func() error

	// calls tracks calls to the methods.
	calls struct {
		// Name holds details about calls to the Name method.
		Name []struct {
		}
		// Validate holds details about calls to the Validate method.
		Validate []struct {
		}
	}
	lockName     sync.RWMutex
	lockValidate sync.RWMutex
}

// Name calls NameFunc.
func (mock *GatewayMiddlewareConfMock) Name() string {
	if mock.NameFunc == nil {
		panic("GatewayMiddlewareConfMock.NameFunc: method is nil but GatewayMiddlewareConf.Name was just called")
	}
	callInfo := struct {
	}{}
	mock.lockName.Lock()
	mock.calls.Name = append(mock.calls.Name, callInfo)
	mock.lockName.Unlock()
	return mock.NameFunc()
}

// NameCalls gets all the calls that were made to Name.
// Check the length with:
//
//	len(mockedGatewayMiddlewareConf.NameCalls())
func (mock *GatewayMiddlewareConfMock) NameCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockName.RLock()
	calls = mock.calls.Name
	mock.lockName.RUnlock()
	return calls
}

// Validate calls ValidateFunc.
func (mock *GatewayMiddlewareConfMock) Validate() error {
	if mock.ValidateFunc == nil {
		panic("GatewayMiddlewareConfMock.ValidateFunc: method is nil but GatewayMiddlewareConf.Validate was just called")
	}
	callInfo := struct {
	}{}
	mock.lockValidate.Lock()
	mock.calls.Validate = append(mock.calls.Validate, callInfo)
	mock.lockValidate.Unlock()
	return mock.ValidateFunc()
}

// ValidateCalls gets all the calls that were made to Validate.
// Check the length with:
//
//	len(mockedGatewayMiddlewareConf.ValidateCalls())
func (mock *GatewayMiddlewareConfMock) ValidateCalls() []struct {
} {
	var calls []struct {
	}
	mock.lockValidate.RLock()
	calls = mock.calls.Validate
	mock.lockValidate.RUnlock()
	return calls
}
